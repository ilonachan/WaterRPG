package jimdo.gladsoft.waterrpg.game.maps;

import jimdo.gladsoft.waterrpg.game.GameLogic;
import jimdo.gladsoft.waterrpg.game.RPGMap;

import static java.lang.Math.min;

/**
 * Created by osboxes on 7/18/17.
 */

public class PalletTownMap extends RPGMap{

    @Override
    protected void loadEntities() {

    }

    @Override
    protected void addTileHandlers() {
        this.tileInteractions[7][4] = new TileEventHandler(){
            @Override
            public boolean handle(int direction) { if(direction!=0) return false; GameLogic.context.showTextBox("",GameLogic.playerData.playerName+"'s home"); return true; }
        };
        this.tileInteractions[11][9] = new TileEventHandler(){
            @Override
            public boolean handle(int direction) { if(direction!=0) return false; GameLogic.context.showTextBox("", "Pirate Bay!\nTreasured dreams lie here"); return true; }
        };
        this.tileInteractions[7][13] = new TileEventHandler(){
            @Override
            public boolean handle(int direction) { if(direction!=0) return false; GameLogic.context.showTextBox("","Gary's home"); return true; }
        };

        this.tileStepEvent[13][16] = new TileEventHandler(){
            @Override
            public boolean handle(int direction) { GameLogic.warpPlayerToPosition(1, 6, 12); return true; }
        };
    }

    @Override
    protected void initTiles() {
        this.defaultTilePattern = new int[][] {{0,1},{6,7}};
        this.graphTileDef = new int[][]
                {{0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 3, 4, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1},
                        {6, 7, 8, 9, 8, 9, 8, 9, 8, 9, 8, 10, 11, 12, 13, 9, 8, 9, 8, 9, 8, 9, 6, 7},
                        {0, 2, 3, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 16, 14, 14, 14, 14, 14, 14, 14, 17, 5, 1},
                        {6, 18, 11, 19, 19, 20, 21, 21, 21, 22, 19, 19, 19, 19, 20, 21, 21, 21, 22, 19, 19, 23, 24, 7},
                        {0, 2, 11, 25, 26, 27, 28, 28, 28, 29, 30, 19, 25, 26, 27, 28, 28, 28, 29, 30, 19, 23, 5, 1},
                        {6, 18, 11, 23, 31, 32, 33, 33, 33, 34, 35, 19, 23, 31, 32, 33, 33, 33, 34, 35, 19, 23, 24, 7},
                        {0, 2, 11, 23, 36, 37, 38, 39, 40, 41, 35, 19, 23, 36, 37, 38, 39, 40, 41, 35, 19, 23, 5, 1},
                        {6, 18, 11, 23, 42, 43, 44, 45, 46, 47, 35, 19, 23, 42, 43, 44, 45, 46, 47, 35, 19, 23, 24, 7},
                        {0, 2, 11, 48, 14, 49, 19, 48, 14, 14, 49, 19, 48, 14, 49, 19, 48, 14, 14, 49, 19, 23, 5, 1},
                        {6, 18, 11, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 50, 51, 51, 51, 51, 52, 53, 19, 23, 24, 7},
                        {0, 2, 11, 19, 19, 19, 19, 19, 19, 19, 19, 19, 25, 54, 55, 55, 55, 55, 56, 57, 58, 23, 5, 1},
                        {6, 18, 11, 19, 25, 59, 59, 59, 59, 60, 30, 19, 23, 61, 62, 62, 62, 62, 63, 64, 11, 23, 24, 7},
                        {0, 2, 11, 19, 23, 65, 65, 65, 65, 31, 35, 19, 23, 66, 67, 68, 69, 70, 71, 72, 11, 23, 5, 1},
                        {6, 18, 11, 19, 23, 65, 65, 65, 65, 73, 35, 19, 23, 74, 75, 76, 77, 78, 79, 80, 11, 23, 24, 7},
                        {0, 2, 11, 19, 23, 81, 82, 31, 82, 31, 35, 19, 48, 14, 14, 49, 19, 48, 14, 14, 83, 23, 5, 1},
                        {6, 18, 11, 19, 48, 14, 14, 14, 14, 14, 49, 19, 25, 26, 26, 26, 26, 26, 26, 30, 19, 23, 24, 7},
                        {0, 2, 11, 19, 19, 19, 19, 19, 19, 19, 19, 19, 84, 85, 85, 85, 60, 85, 85, 86, 19, 23, 5, 1},
                        {6, 18, 87, 26, 26, 26, 26, 88, 89, 89, 90, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 23, 24, 7},
                        {0, 2, 31, 31, 82, 31, 82, 91, 92, 92, 93, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 94, 5, 1},
                        {6, 18, 95, 96, 95, 96, 73, 91, 92, 92, 93, 31, 73, 31, 73, 31, 73, 31, 95, 96, 95, 96, 24, 7}};
        this.tileBehaviorDef = new int[][]
                {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
                        {1, 1, 1, 1, 1, 1, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1}};
    }

    @Override
    protected String getMapName() {
        return "pallet_town";
    }

    @Override
    public String serializeFlags() {
        return null;
    }

    @Override
    public void deserializeFlags(String text) {

    }
}
